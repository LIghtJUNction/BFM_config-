#!/system/bin/sh

if ! command -v busybox &> /dev/null; then
  export PATH="/data/adb/magisk:/data/adb/ksu/bin:/data/adb/ap/bin:$PATH:/system/bin"
fi

# Take the current time
# 获取当前时间
current_time=$(date +"%I:%M %P")

# define the settings and paths
# 定义设置和路径
settings="/data/adb/box/settings.ini"

# set the port numbers for tproxy and redir
# 设置 tproxy 和 redir 的端口号
tproxy_port="9898"
redir_port="9797"

# enable/disable port detection: true / false
# 启用/禁用端口检测：true / false
port_detect="true"

# enable/disable IPv6: true / false
# 启用/禁用 IPv6：true / false
ipv6="true"

# list of available kernel binaries
# 可用内核二进制文件列表
bin_list=( "clash" "sing-box" "xray" "v2fly" "hysteria" )

# for run and download premium or mihomo
# put kernel premium and mihomo into /data/adb/box/bin directory
# 运行和下载 premium 或 mihomo
# 将内核 premium 和 mihomo 放入 /data/adb/box/bin 目录
xclash_option="mihomo"
# select the client to use : clash / sing-box / xray / v2fly
# 选择要使用的客户端：clash / sing-box / xray / v2fly
bin_name="clash"

# This script is used to set the user and group for the BFM core files.
# 此脚本用于设置 BFM 核心文件的用户和组。
box_user_group="root:net_admin"

# redirect: tcp + udp[direct]
# tproxy: tcp + udp
# mixed: redirect[tcp] + tun[udp]
# enhance: redirect[tcp] + tproxy[udp]
# tun: tcp + udp (auto-route)
# 网络模式选项
network_mode="tun"

# blacklist / whitelist
# 黑名单 / 白名单
proxy_mode="blacklist"

# list of package names to be proxied
# 需要代理的包名列表
# android Package Name, For example: ("com.android.captiveportallogin" "com.tencent.mm")
packages_list=()

# The gid in the list will be bypassed or proxied according to the proxy_mode configuration, and the gid can be arbitrarily specified by the busybox setuidgid command
# 列表中的 gid 将根据 proxy_mode 配置被绕过或代理，gid 可以通过 busybox setuidgid 命令任意指定
gid_list=()

# Display AP info by typing "su -c ifconfig" in terminal  "swlan+" "wlan+" "rndis+"
# 通过在终端中输入 "su -c ifconfig" 显示 AP 信息  "swlan+" "wlan+" "rndis+"
ap_list=( "ap+" "wlan+" "rndis+" "swlan+" "ncm+")  
# Ignore AP in the out list , doesn't work in fake-ip mode
# 忽略 out 列表中的 AP，在 fake-ip 模式下不起作用
ignore_out_list=()   # ‘wlan+’连接wifi时不使用代理

# Set cgroup to limit memory usage
# 设置 cgroup 以限制内存使用
cgroup_memcg="false"
memcg_limit="25M"

# Set cgroup to cpuset usage
# 设置 cgroup 以使用 cpuset
cgroup_cpuset="false"

# Set cgroup to blkio usage
# 设置 cgroup 以使用 blkio
cgroup_blkio="false"

# Set box directory variables
# 设置 box 目录变量
box_dir="/data/adb/box"
box_run="${box_dir}/run"
box_log="${box_run}/runs.log"
box_pid="${box_run}/box.pid"
bin_dir="${box_dir}/bin"
bin_path="${bin_dir}/${bin_name}"

# if you don't want to generate the /run/${bin_name}.log file (because it will grow in size over time), replace "${box_run}/${bin_name}.log" to "/dev/null"
# 如果你不想生成 /run/${bin_name}.log 文件（因为它会随着时间的推移而变大），将 "${box_run}/${bin_name}.log" 替换为 "/dev/null"
bin_log="${box_run}/${bin_name}.log"
# bin_log="/dev/null"

system_packages_file="/data/system/packages.list"
uid_list=("/data/adb/box/run/appuid.list")

# Update subscription & geox
# 更新订阅 & geox
# Set update interval using cron, for more information: https://crontab.guru/
# 使用 cron 设置更新间隔，更多信息请访问：https://crontab.guru/
# set 'true' to enable Cron job
# 设置 'true' 以启用 Cron 任务
interva_update="0 0,6,12,18 * * *" # will update every hour 00,06,12,18
run_crontab="false"

# type "su -c /data/adb/box/scripts/box.tool geox" to update geox
# 输入 "su -c /data/adb/box/scripts/box.tool geox" 更新 geox
update_geo="false" # box.tool里面把geox的更新地址写死了是官方的地址，所以这里不更新

# if "renew=true" it will update config.yaml not subscription configuration
# 如果 "renew=true" 它将更新 config.yaml 而不是订阅配置
# type "su -c /data/adb/box/scripts/box.tool subs" to update subscription
# 输入 "su -c /data/adb/box/scripts/box.tool subs" 更新订阅
renew=true
update_subscription="true"
# ex: clash subscription url
# 示例：clash 订阅 URL
subscription_url_clash="https://nodefree.org/dy/$(date +%Y)/$(date +%m)/$(date +%Y%m%d).yaml" # this is just an example.

# clash configuration
# clash 配置
name_clash_config="config.yaml"
clash_config="${box_dir}/clash/${name_clash_config}"

# clash subscription 
# clash 订阅
name_provide_clash_config="myclash.yaml" # 小修改
clash_provide_config="${box_dir}/clash/${name_provide_clash_config}"

# support rules specified in subscriptions, This is useful when the subscription contains customized rules as well.
# 支持订阅中指定的规则，这在订阅包含自定义规则时非常有用。
custom_rules_subs="true"
name_provide_clash_rules="rules.yaml"
clash_provide_rules="${box_dir}/clash/${name_provide_clash_rules}"

# sing configuration
# sing 配置
name_sing_config="config.json"
sing_config="${box_dir}/sing-box/${name_sing_config}"

normal="\033[0m"
orange="\033[1;38;5;208m"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
blue="\033[1;34m"

# eg: notify $title $content
# 例如：notify $title $content
notify() {
  # using Xposed edge app toast
  # 使用 Xposed edge 应用程序 toast
  am start -a android.intent.action.VIEW -n com.jozein.xedgepro/.ui.ActivityPerformAction --ei __0 111 --es __1 "$2" >/dev/null 2>&1

  # using system notification
  # 使用系统通知
  # su -lp "2000" -c "cmd notification post -S messaging --conversation '$1' --message '$1':'$2' 'Tag' '$(echo $RANDOM)' " >/dev/null 2>&1
}

log() {
  # Selects the text color according to the parameters
  # 根据参数选择文本颜色
  case $1 in
    Info) color="${blue}" ;;
    Error) color="${red}" ;;
    Warning) color="${yellow}" ;;
    *) color="${green}" ;;
  esac
  # Add messages to time and parameters
  # 添加时间和参数到消息
  message="${current_time} [$1]: $2"
  if [ -t 1 ]; then
    # Prints messages to the console
    # 打印消息到控制台
    echo -e "${color}${message}${normal}"
  else
    # Print messages to a log file
    # 打印消息到日志文件
    echo "${message}" >> ${box_log} 2>&1
  fi
  
  if [[ $TOAST ]]; then
      notify "box_for_root" "${message}"
  fi

}